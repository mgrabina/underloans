/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { VerifySig, VerifySigInterface } from "../../contracts/VerifySig";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "getEthHashedMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_ethHashMessage",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576104b69081610020823930815050f35b600080fdfe608060405260048036101561001357600080fd5b6000803560e01c91826319045a25146100cf5782635ade66331461004757505063ebb90f181461004257600080fd5b6101bf565b60603660031901126100cb576001600160a01b03813581811692908390036100c75767ffffffffffffffff6024358181116100c3576100899036908401610173565b946044359182116100c05750936100b16100ab6100b693602097369101610173565b91610220565b6102a6565b1614604051908152f35b80fd5b8580fd5b8380fd5b5080fd5b9060403660031901126100c0576024359067ffffffffffffffff82116100c05760206101088461010136868301610173565b90356102a6565b6040516001600160a01b039091168152f35b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761015257604052565b61011a565b67ffffffffffffffff811161015257601f01601f191660200190565b81601f820112156101ba5780359061018a82610157565b926101986040519485610130565b828452602083830101116101ba57816000926020809301838601378301015290565b600080fd5b60203660031901126101ba5760043567ffffffffffffffff81116101ba576101f56101f06020923690600401610173565b610220565b604051908152f35b60005b8381106102105750506000910152565b8181015183820152602001610200565b61022a81516103c5565b90610294603a604051809360208201957f19457468657265756d205369676e6564204d6573736167653a0a000000000000875261027081518092602087870191016101fd565b820161028582518093602087850191016101fd565b0103601a810184520182610130565b51902090565b6040513d6000823e3d90fd5b9060418151036102f6576020818101516040808401516060948501518251968752600090811a8786015291860192909252928401528180529160809060015afa156102f15760005190565b61029a565b60405162461bcd60e51b815260206004820152601660248201527514da59db985d1d5c99481a5cc81b9bdd081d985b1a5960521b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9061035482610157565b6103616040519182610130565b8281528092610372601f1991610157565b0190602036910137565b60001981019190821161038b57565b610334565b603001908160301161038b57565b9081518110156103af570160200190565b634e487b7160e01b600052603260045260246000fd5b8015610451576000818181805b61043557506103e08161034a565b935b6103ec5750505090565b6103f59061037c565b90600a9061042061041061040a848406610390565b60ff1690565b60f81b6001600160f81b03191690565b841a61042c848761039e565b530490816103e2565b9150600019811461038b576001600a91019104808492916103d2565b506040516040810181811067ffffffffffffffff8211176101525760405260018152600360fc1b60208201529056fea264697066735822122071867b4750c24cf61692e6c70a99c56d96f3a10a191687fa51bef3898da8bc3864736f6c63430008140033";

type VerifySigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifySigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifySig__factory extends ContractFactory {
  constructor(...args: VerifySigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VerifySig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifySig__factory {
    return super.connect(runner) as VerifySig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifySigInterface {
    return new Interface(_abi) as VerifySigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VerifySig {
    return new Contract(address, _abi, runner) as unknown as VerifySig;
  }
}
