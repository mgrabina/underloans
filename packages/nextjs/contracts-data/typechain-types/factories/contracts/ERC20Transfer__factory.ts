/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC20Transfer,
  ERC20TransferInterface,
} from "../../contracts/ERC20Transfer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
    ],
    name: "ConsumeCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCode",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "TransferValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "createTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "setCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validationModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346200023957601f6200278538819003918201601f1916830191906001600160401b038311848410176200023e578160809285926040958652833981010312620002395781516001600160a01b0380821682036200023957602092838501519382851685036200023957818601519263ffffffff968785168095036200023957606001519081168091036200023957600380546001600160401b03191690558315620001ea5781841015620001a7576000958463ffffffff19885416178755608052855b8781168581101562000110579081620000df8a9362000254565b908952600185528589205516878114620000fc57600101620000c5565b634e487b7160e01b87526011600452602487fd5b50509491959092600019018181116200019357620001348793926002921662000254565b82805293522055600160045560a052600880546001600160a01b03191691909117905551611f3290816200085382396080518181816101da0152818161034701526110e1015260a0518181816109de01528181610de501526113c60152f35b634e487b7160e01b83526011600452602483fd5b50606491519062461bcd60e51b82526004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152fd5b50608491519062461bcd60e51b82526004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b806200027f57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103620002ad57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620002db57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036200030957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200033757507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200036557507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200039357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103620003c157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620003ef57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b600981036200041c57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200044a57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200047857507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103620004a657507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103620004d457507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036200050257507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200053057507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200055e57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200058c57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103620005ba57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620005e857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b601481036200061657507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200064457507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200067257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103620006a057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103620006ce57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620006fc57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200072a57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200075857507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200078557507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d8103620007b357507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620007e157507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036200080d577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe60e080604052600436101561001357600080fd5b60008060c052803560e01c91826317cc915c146113f557505080632b7ac3f3146113ae578063323020e5146110055780633e7fd3b414610cc6578063414a37ba14610c895780634488e5951461089b5780634ecf518b146108765780636d9833e314610858578063838a11fd14610802578063839df945146107cf5780638ea3099e1461079857806390eeb02b146107725780639fa12d0b14610677578063ba70f75714610643578063c2b40ae414610615578063c345cc4f146105e7578063cc013d85146102c1578063cd87a3b4146102a3578063e5285dcc1461026c578063e829558814610246578063ec73295914610209578063ed33639f146101c2578063f178e47c14610194578063fc0c546a146101695763fc7e9c6f1461013857600080fd5b346101635760c0518060031936011261016057602060035463ffffffff60405191831c168152f35b80fd5b60c05180fd5b346101635760c05180600319360112610160576008546040516001600160a01b039091168152602090f35b346101635760203660031901126101635760043560c0515260016020526020604060c0512054604051908152f35b346101635760c05180600319360112610160576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101635760c051806003193601126101605760206040517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b34610163576020366003190112610163576020610264600435611928565b604051908152f35b34610163576020366003190112610163576020610299600435600052600560205260ff6040600020541690565b6040519015158152f35b346101635760c05180600319360112610160576020604051601e8152f35b6040366003190112610163576024600435813567ffffffffffffffff8111610163576102f1903690600401611423565b6102fc92919261162b565b8160c051526020906006825260ff604060c0512054166105995763ffffffff93600392858454821c16866103348160c0515416611851565b16811461053c5794938590859060c051967f0000000000000000000000000000000000000000000000000000000000000000935b60c051938b8554168c8b16908110156103f357916103b7637fffffff928e94600198898516156000146103e3575090806103a183611928565b9260c05152898c52604060c05120555b896116b8565b951c1698168a81146103cc5760010197610368565b8b634e487b7160e01b60c05152601160045260c051fd5b52878a52604060c05120546103b1565b508a91508c898989938f885490601e8161040e818516611877565b160616809163ffffffff191617895560c0515260028552604060c051205561043585611877565b875467ffffffff00000000191690851b67ffffffff000000001617875560c08051879052600685525160408120805460ff1916600190811790915597905b8381106104b55788887fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e360408a8a82519182524290820152a260045560c05180f35b8760c0515260078652604060c051206104cf82868661161b565b6001600160a01b03919035828116919082900361016357805490600160401b821015610525578161050a918e610520979695940181556115b0565b9092835491871b92831b921b19161790556115f6565b610473565b88634e487b7160e01b60c05152604160045260c051fd5b60405162461bcd60e51b8152600481018390526030818a01527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b8152600481018390526021818701527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b346101635760203660031901126101635760043560c0515260096020526020604060c0512054604051908152f35b346101635760203660031901126101635760043560c0515260026020526020604060c0512054604051908152f35b346101635760c051806003193601126101605763ffffffff60035416905260026020526020604060c0512054604051908152f35b34610163576020806003193601126101635760043567ffffffffffffffff8111610163576106a9903690600401611423565b906106b382611528565b906106c1604051928361148b565b8282526106cd83611528565b8285019390601f190136853760c0515b81811061072b5750505090604051928392818401908285525180915260408401929160c0515b82811061071257505050500390f35b8351151585528695509381019392810192600101610703565b8061075261073d61075b93858761161b565b35600052600560205260ff6040600020541690565b610760576115f6565b6106dd565b600161076c828761168e565b526115f6565b346101635760c0518060031936011261016057602063ffffffff60035416604051908152f35b34610163576060366003190112610163576004356001600160a01b03811681036101635761026460209160443590602435906116b8565b346101635760203660031901126101635760043560c051526006602052602060ff604060c0512054166040519015158152f35b346101635760403660031901126101635760243560043560c05152600760205260c0516040812090815483101561016057602061083f84846115b0565b905460405160039290921b1c6001600160a01b03168152f35b3461016357602036600319011261016357602061029960043561188c565b346101635760c051806003193601126101605763ffffffff6020915416604051908152f35b346101635760c03660031901126101635767ffffffffffffffff6024803560043583821161016357366023830112156101635781600401359084821161016357368483850101116101635760443593606435956108f6611512565b9360a43591821161016357610921610915610929933690600401611423565b979092853692016114ad565b953691611540565b9161093261162b565b8660c051526020946005865260ff604060c051205416610c45576109558761188c565b15610c0157856109bf916040519861096c8a611459565b89528189018a90526001600160a01b039687166040808b0182905260c0805160608d0152805160808d01525160a08c01525163695ef6f960e01b815260e0600482015290999093849260e484019061164e565b9086830160c051905b60068210610be857505050818060c051920391897f0000000000000000000000000000000000000000000000000000000000000000165af1908115610ac85760c05191610bcb575b5015610b8e5760c0515b8160c0515260078652604060c051208054821015610ad5579086610a73610a428389956115b0565b905490610a4f858a61168e565b519060405196878095819463c16e50ef60e01b83528860048401528c83019061164e565b039360c0519260031b1c165af1918215610ac857610a9692610a9b575b506115f6565b610a1a565b610aba90883d8a11610ac1575b610ab2818361148b565b8101906115de565b5089610a90565b503d610aa8565b6040513d60c051823e3d90fd5b5050849250856044917f9ebe94a87e9d85fb44a2b38b11c3b10117eba3fbd045c54a8577bc62540d5d7560408a8060c05152600588528160c05120600160ff1982541617905581519085825288820152a1600160045560c0515260098452604060c05120549460085416604051958694859363a9059cbb60e01b8552600485015283015260c051905af18015610ac857610b70575b60c05180f35b81610b8692903d10610ac157610ab2818361148b565b508080610b6a565b60405162461bcd60e51b8152600481018690526016818401527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b610be29150863d8811610ac157610ab2818361148b565b88610a10565b825181528b9587955092830192600190920191016109c8565b60405162461bcd60e51b815260048101879052601c818501527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601f818501527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b346101635760c051806003193601126101605760206040517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b60c036600319011261016357602460043567ffffffffffffffff823581811161016357610cf79036906004016114f4565b9260443590606435610d07611512565b9360a435908111610163573660238201121561016357610d309036908481600401359101611540565b92610d3961162b565b8160c051526020966005885260ff604060c051205416610fc157610d5c8261188c565b15610f7d5787610dc69160405193610d7385611459565b84528184018590526001600160a01b03978816604080860182905260c080516060880152805160808801525160a08701525163695ef6f960e01b815260e0600482015290949093849260e484019061164e565b9087830160c051905b60068210610f6457505050818060c0519203918a7f0000000000000000000000000000000000000000000000000000000000000000165af1908115610ac85760c05191610f47575b5015610f0a5760c0515b8660c0515260078852604060c051208054821015610eb7579088610e7a610e49838a956115b0565b905490610e56858b61168e565b519060405196878095819463c16e50ef60e01b83528860048401528d83019061164e565b039360c0519260031b1c165af1918215610ac857610e9c92610ea157506115f6565b610e21565b610aba908a3d8c11610ac157610ab2818361148b565b7f9ebe94a87e9d85fb44a2b38b11c3b10117eba3fbd045c54a8577bc62540d5d75604084868c8160c05152600581528360c05120600160ff198254161790558351928352820152a1600160045560c05180f35b60405162461bcd60e51b8152600481018890526016818501527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b610f5e9150883d8a11610ac157610ab2818361148b565b88610e17565b825181528d958795509283019260019092019101610dcf565b60405162461bcd60e51b815260048101899052601c818601527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101899052601f818601527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b606036600319011261016357602460805260243560443567ffffffffffffffff811161016357611039903690600401611423565b909161104361162b565b60043560c05152600660205260ff604060c05120541661135f5763ffffffff918260a05260039383855460201c16936110808160c0515416611851565b1684146113015783926004359560c051945b60a05160c05198818a5416828916101561114e57637fffffff92916111059160019b8c8516156000146111385750806110cc838c16611928565b928b1660c051528c602052604060c05120555b7f00000000000000000000000000000000000000000000000000000000000000006116b8565b981c169460a05180911690811461111f5760010194611092565b634e487b7160e01b60c05152601160045260805160c051fd5b90918a1690528a602052604060c05120546110df565b838987898894845460a051601e81611167818516611877565b160616809163ffffffff191617865560c051526002602052604060c051205561118f83611877565b67ffffffff0000000085549160201b169067ffffffff00000000191617845560043560c05152600660205260c0519360408520946001958660ff198254161790555b82811061128f57505050506040519081524260208201527fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e3604060043592a26004556064602060018060a01b0360085416604051928380926323b872dd60e01b82523360048301523060805183015286604483015260c051905af18015610ac857611270575b5060043560c05152600960205260c05190604082205580f35b6112889060203d602011610ac157610ab2818361148b565b5081611257565b60043560c051526007602052604060c05120906112ad81858761161b565b6001600160a01b0390358181169081900361016357835493600160401b8510156112e8578461050a918b6112e3970181556115b0565b6111d1565b634e487b7160e01b60c05152604160045260805160c051fd5b608460405162461bcd60e51b81526020600482015260306080518201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152fd5b608460405162461bcd60e51b81526020600482015260216080518201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152fd5b346101635760c05180600319360112610160576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461141f57602036600319011261141f5760ff604060209360043581526005855220541615158152f35b5080fd5b9181601f840112156114545782359167ffffffffffffffff8311611454576020808501948460051b01011161145457565b600080fd5b60c0810190811067ffffffffffffffff82111761147557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761147557604052565b92919267ffffffffffffffff821161147557604051916114d7601f8201601f19166020018461148b565b829481845281830111611454578281602093846000960137010152565b9080601f830112156114545781602061150f933591016114ad565b90565b608435906001600160a01b038216820361145457565b67ffffffffffffffff81116114755760051b60200190565b9291909261154d84611528565b9161155b604051938461148b565b829480845260208094019060051b8301928284116114545780915b84831061158557505050505050565b823567ffffffffffffffff81116114545786916115a586849386016114f4565b815201920191611576565b80548210156115c85760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90816020910312611454575180151581036114545790565b60001981146116055760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156115c85760051b0190565b60026004541461163c576002600455565b604051633ee5aeb560e01b8152600490fd5b919082519283825260005b84811061167a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611659565b80518210156115c85760209160051b010190565b9190826040910312611454576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001938483101561180d57848210156117be5760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa9788156117b457869798859697938991611792575b506044939486519889968795865208600484015260248301525afa928315611787579261175d57505090565b61177c9250803d10611780575b611774818361148b565b8101906116a2565b5090565b503d61176a565b9051903d90823e3d90fd5b604494506117ad9150863d881161178057611774818361148b565b9093611731565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b80156118715760ff8111611605576001901b9063ffffffff821161160557565b50600190565b90600163ffffffff8093160191821161160557565b80156119225763ffffffff8060035416918260019384805b6118b4575b505050505050600090565b15611913575b6000908481169081835260026020526040832054851461190a57859115611902575b1680156118ee576000190190856118a4565b634e487b7160e01b82526011600452602482fd5b50601e6118dc565b50505050505090565b81848216036118ba57806118a9565b50600090565b8061195257507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b6001810361197f57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b600281036119ac57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036119d957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103611a0657507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103611a3357507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103611a6057507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103611a8d57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103611aba57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103611ae657507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a8103611b1357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103611b4057507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103611b6d57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611b9a57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611bc757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611bf457507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611c2157507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611c4e57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611c7b57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611ca857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611cd557507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611d0257507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103611d2f57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103611d5c57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103611d8957507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103611db657507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103611de357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103611e1057507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c8103611e3c57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d8103611e6957507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103611e9657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03611ec1577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfea2646970667358221220ce037e10a6e3e7a426dc375e8376c2640eb7cdec421d60acd84686d37df6767864736f6c63430008140033";

type ERC20TransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Transfer__factory extends ContractFactory {
  constructor(...args: ERC20TransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _token,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _token,
      overrides || {}
    ) as Promise<
      ERC20Transfer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Transfer__factory {
    return super.connect(runner) as ERC20Transfer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TransferInterface {
    return new Interface(_abi) as ERC20TransferInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Transfer {
    return new Contract(address, _abi, runner) as unknown as ERC20Transfer;
  }
}
