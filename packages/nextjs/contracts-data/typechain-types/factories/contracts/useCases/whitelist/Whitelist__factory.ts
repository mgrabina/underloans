/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Whitelist,
  WhitelistInterface,
} from "../../../../contracts/useCases/whitelist/Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ConsumeCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UserAddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UserRemovedFromWhitelist",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "addUserToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_commitments",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "_proofs",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
      {
        internalType: "address payable[]",
        name: "_tos",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_usersToWhitelist",
        type: "address[]",
      },
    ],
    name: "bulkConsumeEarlyAccessCodes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_commitments",
        type: "bytes32[]",
      },
      {
        internalType: "address[][]",
        name: "_validationModules",
        type: "address[][]",
      },
    ],
    name: "bulkCreateEarlyAccessCodes",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "userToWhitelist",
        type: "address",
      },
    ],
    name: "consumeEarlyAccessCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "createEarlyAccessCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "removeUserFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "setCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usersWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validationModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346200028e57601f62002e3b38819003918201601f191683019291906001600160401b03841183851017620002935781608092849260409687528339810103126200028e5780516001600160a01b03919082811681036200028e57602091828101519284841684036200028e57858201519363ffffffff95868616938487036200028e57606001518181168091036200028e5780156200027657600096875492828b519185167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08b80a3600380546001600160401b0319169055861562000228575084861015620001e4576001600160c01b03199092161760a09190911b63ffffffff60a01b16178555608052835b858116838110156200015b5790816200012a8893620002a9565b908752600184528887205516858114620001475760010162000110565b634e487b7160e01b85526011600452602485fd5b50509291939060001901818111620001d0576200017e86939260029216620002a9565b93828052522055600160045560a052516125939081620008a882396080518181816103bd0152818161091001528181610a4b0152611139015260a0518181816114170152818161166e015261230f0152f35b634e487b7160e01b83526011600452602483fd5b895162461bcd60e51b815260048101869052601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606490fd5b62461bcd60e51b815260048101869052602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152608490fd5b8851631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b80620002d457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036200030257507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b600281036200033057507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036200035e57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200038c57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103620003ba57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103620003e857507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036200041657507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b600881036200044457507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b600981036200047157507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200049f57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103620004cd57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103620004fb57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d81036200052957507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036200055757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200058557507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103620005b357507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103620005e157507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200060f57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b601381036200063d57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b601481036200066b57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200069957507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103620006c757507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103620006f557507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036200072357507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b601981036200075157507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200077f57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103620007ad57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c8103620007da57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200080857507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e81036200083657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f0362000862577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe6101e080604052600436101561001457600080fd5b60003560e01c90816317cc915c1461169d575080632b7ac3f3146116585780633af32abf14610ca55780633e7fd3b414611302578063414a37ba146112c75780634ecf518b146112a05780636c31a67d146110d95780636d9833e3146110bb578063715018a614611062578063747b805014610fd7578063838a11fd14610f85578063839df94514610f545780638da5cb5b14610f2b5780638ea3099e14610ef457806390eeb02b14610ed05780639fa12d0b14610dd85780639fdc864214610d42578063ba70f75714610d10578063c2b40ae414610ce4578063c78aa3ed14610ca5578063cc013d85146109f3578063cd87a3b4146109d7578063e5285dcc146109a0578063e82955881461097a578063ec7329591461093f578063ed33639f146108fa578063efb68ee91461070c578063f178e47c146106e0578063f2fde38b14610652578063f8f534241461026a578063f9902bb1146101ab5763fc7e9c6f1461018057600080fd5b346101a65760003660031901126101a657602060035463ffffffff60405191831c168152f35b600080fd5b346101a65760203660031901126101a6576101c46116ca565b6101cc611897565b6001600160a01b031660008181526008602052604090205460ff161561022e57806000526008602052604060002060ff1981541690557f945abea5c46c52351c0135978bf987fe1fb685d09bdf509f3a325ae79747ce676020604051428152a2005b60405162461bcd60e51b8152602060048201526014602482015273155cd95c881b9bdd081dda1a5d195b1a5cdd195960621b6044820152606490fd5b60403660031901126101a6576004356001600160401b0381116101a65761029590369060040161181c565b906024356001600160401b0381116101a6576102b68391369060040161181c565b929060005b8381106102c457005b6102cf8185856118d2565b358582101561063c5760059582871b840135601e19853603018112156101a6578401966001600160401b038835116101a6578735901b360360208801136101a657610318611897565b6103206118f6565b81600052600660205260ff604060002054166105ed5763ffffffff60035460201c169363ffffffff6103588160005460a01c16611b34565b16851461058f576000958592845b63ffffffff60005460a01c1663ffffffff8a161015610434576103e1637fffffff91600187161560001461041a57806103a463ffffffff8d16611c0b565b9163ffffffff8d1660005260016020526040600020555b7f000000000000000000000000000000000000000000000000000000000000000061199b565b9460011c169763ffffffff808216146104045763ffffffff166001019793610366565b634e487b7160e01b600052601160045260246000fd5b63ffffffff8b1660005260016020526040600020546103bb565b9198969350965097909760035463ffffffff601e81610454818516611b5a565b160616809163ffffffff191617600355600052600260205260406000205561047b82611b5a565b67ffffffff000000006003549160201b169067ffffffff000000001916176003558260005260066020526040600020600160ff1982541617905560005b8135811061050b575050907fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e3604061050194938151908152426020820152a260016004556118c3565b93909291936102bb565b83600052600760205260406000209061053161052c828535602087016118d2565b6118e2565b825492600160401b84101561057957836105539160016105749601815561187f565b819291549060031b9160018060a01b03809116831b921b19161790556118c3565b6104b8565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b634e487b7160e01b600052603260045260246000fd5b346101a65760203660031901126101a65761066b6116ca565b610673611897565b6001600160a01b039081169081156106c757600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346101a65760203660031901126101a65760043560005260016020526020604060002054604051908152f35b346101a65760e03660031901126101a6576004356001600160401b0381116101a65761073c90369060040161181c565b6101c0526024356001600160401b0381116101a65761075f90369060040161181c565b91906044356001600160401b0381116101a65761078090369060040161181c565b6101a052610120526064356001600160401b0381116101a6576107a790369060040161181c565b61018052610140526084356001600160401b0381116101a6576107ce90369060040161181c565b60c0526080526001600160401b0360a435116101a6576107f33660a43560040161181c565b60e0526101005260c4356001600160401b0381116101a65761081990369060040161181c565b60a0526101605260005b6101c051808210156108f8578161083a91856118d2565b35908481101561063c578060051b830135601e19843603018112156101a65783016001600160401b038135116101a6578035360360208201136101a657610888826101a051610120516118d2565b3561089a8361018051610140516118d2565b35916108ab8460c0516080516118d2565b35946001600160a01b03861686036101a6576108f3956108ee946108d861052c8860a051610160516118d2565b9460e0519461010051946020823592019061222b565b6118c3565b610823565b005b346101a65760003660031901126101a6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a65760003660031901126101a65760206040517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b346101a65760203660031901126101a6576020610998600435611c0b565b604051908152f35b346101a65760203660031901126101a65760206109cd600435600052600560205260ff6040600020541690565b6040519015158152f35b346101a65760003660031901126101a6576020604051601e8152f35b6109fc3661184c565b91610a056118f6565b806000526020906006825260ff60406000205416610c565763ffffffff93600392858454821c169486610a3e8160005460a01c16611b34565b168614610bf857946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a60005460a01c168b8a1690811015610ae0578b91610ab9637fffffff9260019b8c841615600014610ace5780610aa583611c0b565b926000528d8c526040600020555b8961199b565b991c1698168a81146104045760010197610a6f565b906000528b8a52604060002054610ab3565b5050848987898d875490601e81610af8818516611b5a565b160616809163ffffffff191617885560005260028452604060002055610b1d84611b5a565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b828110610b965787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b8660005260078552604060002090610bb261052c8286886118d2565b825492600160401b8410156105795783610bd3918c610bf39601815561187f565b8192915490861b9160018060a01b03809116831b921b19161790556118c3565b610b58565b60405162461bcd60e51b815260048101839052603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260048101839052602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b346101a65760203660031901126101a6576001600160a01b03610cc66116ca565b166000526008602052602060ff604060002054166040519015158152f35b346101a65760203660031901126101a65760043560005260026020526020604060002054604051908152f35b346101a65760003660031901126101a65763ffffffff6003541660005260026020526020604060002054604051908152f35b346101a65760e03660031901126101a6576024356001600160401b038082116101a657366023830112156101a6578160040135908082116101a65736602483850101116101a657610d91611780565b9060a4359081116101a657610daa90369060040161181c565b60c435939092906001600160a01b03851685036101a6576108f895606435916024604435920160043561222b565b346101a6576020806003193601126101a6576004356001600160401b0381116101a657610e0990369060040161181c565b90610e1382611796565b90610e2160405192836116fb565b828252610e2d83611796565b8285019390601f190136853760005b818110610e895750505090604051928392818401908285525180915260408401929160005b828110610e7057505050500390f35b8351151585528695509381019392810192600101610e61565b80610eb0610e9b610eb99385876118d2565b35600052600560205260ff6040600020541690565b610ebe576118c3565b610e3c565b6001610eca8287611971565b526118c3565b346101a65760003660031901126101a657602063ffffffff60035416604051908152f35b346101a65760603660031901126101a6576004356001600160a01b03811681036101a657610998602091604435906024359061199b565b346101a65760003660031901126101a6576000546040516001600160a01b039091168152602090f35b346101a65760203660031901126101a6576004356000526006602052602060ff604060002054166040519015158152f35b346101a65760403660031901126101a6576024356004356000526007602052604060002080548210156101a657602091610fbe9161187f565b905460405160039290921b1c6001600160a01b03168152f35b346101a65760203660031901126101a657610ff06116ca565b610ff8611897565b6001600160a01b031660008181526008602052604090205461101d9060ff16156121df565b8060005260086020526040600020600160ff198254161790557f3e2d12b27238f71a0aa434851aa5f1ac898b05c1694b24c6ea339b76927ea4f76020604051428152a2005b346101a65760003660031901126101a65761107b611897565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a65760203660031901126101a65760206109cd600435611b6f565b6110e23661184c565b916110eb611897565b6110f36118f6565b806000526020906006825260ff60406000205416610c565763ffffffff93600392858454821c16948661112c8160005460a01c16611b34565b168614610bf857946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a60005460a01c168b8a16908110156111a8578b91611193637fffffff9260019b8c841615600014610ace5780610aa583611c0b565b991c1698168a8114610404576001019761115d565b5050848987898d875490601e816111c0818516611b5a565b160616809163ffffffff1916178855600052600284526040600020556111e584611b5a565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b82811061125e5787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b866000526007855260406000209061127a61052c8286886118d2565b825492600160401b8410156105795783610bd3918c61129b9601815561187f565b611220565b346101a65760003660031901126101a657602063ffffffff60005460a01c16604051908152f35b346101a65760003660031901126101a65760206040517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b60c03660031901126101a6576001600160401b03600435602480358381116101a657611332903690600401611762565b9060443593606435611342611780565b9160a4359081116101a657366023820112156101a65761136b90369085816004013591016117ad565b956113746118f6565b816000526020946005865260ff604060002054166116145761139582611b6f565b156115d057906113fb90604051906113ac826116e0565b815283878201528660018060a01b03809616938460408401526000606084015260006080840152600060a084015260405193849163695ef6f960e01b835260e0600484015260e4830190611931565b8882019360005b600681106115b75750508192935003816000887f0000000000000000000000000000000000000000000000000000000000000000165af19081156114fc5760009161159a575b501561155d5760005b86600052600786526040600020805482101561150857908689828860008961148861147f856114ab9a61187f565b95905496611971565b519460405180998197829663c16e50ef60e01b84528a6004850152830190611931565b039460031b1c165af19182156114fc576114ca926114cf575b506118c3565b611451565b6114ee90883d8a116114f5575b6114e681836116fb565b810190611919565b50896114c4565b503d6114dc565b6040513d6000823e3d90fd5b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f606084868a81600052600581526040600020600160ff19825416179055604051928352820152426040820152a16001600455005b60405162461bcd60e51b8152600481018690526016818601527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b6115b19150863d88116114f5576114e681836116fb565b88611448565b81518652948401948b9487945090910190600101611402565b60405162461bcd60e51b815260048101879052601c818701527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601f818701527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b346101a65760003660031901126101a6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a65760203660031901126101a6576020906004356000526005825260ff6040600020541615158152f35b600435906001600160a01b03821682036101a657565b60c081019081106001600160401b0382111761057957604052565b90601f801991011681019081106001600160401b0382111761057957604052565b9291926001600160401b0382116105795760405191611745601f8201601f1916602001846116fb565b8294818452818301116101a6578281602093846000960137010152565b9080601f830112156101a65781602061177d9335910161171c565b90565b608435906001600160a01b03821682036101a657565b6001600160401b0381116105795760051b60200190565b929190926117ba84611796565b916117c860405193846116fb565b829480845260208094019060051b8301928284116101a65780915b8483106117f257505050505050565b82356001600160401b0381116101a65786916118118684938601611762565b8152019201916117e3565b9181601f840112156101a6578235916001600160401b0383116101a6576020808501948460051b0101116101a657565b9060406003198301126101a65760043591602435906001600160401b0382116101a65761187b9160040161181c565b9091565b805482101561063c5760005260206000200190600090565b6000546001600160a01b031633036118ab57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146104045760010190565b919081101561063c5760051b0190565b356001600160a01b03811681036101a65790565b600260045414611907576002600455565b604051633ee5aeb560e01b8152600490fd5b908160209103126101a6575180151581036101a65790565b919082519283825260005b84811061195d575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161193c565b805182101561063c5760209160051b010190565b91908260409103126101a6576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019384831015611af05784821015611aa15760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa978815611a9757869798859697938991611a75575b506044939486519889968795865208600484015260248301525afa928315611a6a5792611a4057505090565b611a5f9250803d10611a63575b611a5781836116fb565b810190611985565b5090565b503d611a4d565b9051903d90823e3d90fd5b60449450611a909150863d8811611a6357611a5781836116fb565b9093611a14565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b8015611b545760ff8111610404576001901b9063ffffffff821161040457565b50600190565b90600163ffffffff8093160191821161040457565b8015611c055763ffffffff8060035416918260019384805b611b97575b505050505050600090565b15611bf6575b60009084811690818352600260205260408320548514611bed57859115611be5575b168015611bd157600019019085611b87565b634e487b7160e01b82526011600452602482fd5b50601e611bbf565b50505050505090565b8184821603611b9d5780611b8c565b50600090565b80611c3557507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103611c6257507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103611c8f57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103611cbc57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103611ce957507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103611d1657507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103611d4357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103611d7057507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103611d9d57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103611dc957507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a8103611df657507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103611e2357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103611e5057507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611e7d57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611eaa57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611ed757507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611f0457507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611f3157507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611f5e57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611f8b57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611fb857507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611fe557507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b6016810361201257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b6017810361203f57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b6018810361206c57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b6019810361209957507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036120c657507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036120f357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c810361211f57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d810361214c57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e810361217957507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036121a4577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b156121e657565b60405162461bcd60e51b815260206004820152601860248201527f5573657220616c72656164792077686974656c697374656400000000000000006044820152606490fd5b97939195600897959399919961227760018060a01b038097169261226f60009d8e9b868d5260209d8e5261226860ff60409e8f90205416156121df565b369161171c565b9836916117ad565b946122806118f6565b848c5260058a5260ff898d2054166125195761229b82611b6f565b156124d5578960e0988d896122f5948d51966122b6886116e0565b875289858801521694858d8201528160608201528160808201528160a08201528c5194859363695ef6f98e1b855260049d8e86015260e4850190611931565b9082602485015b600682106124b55750505082809103918b7f0000000000000000000000000000000000000000000000000000000000000000165af19081156124ab578c9161248e575b5015612452578a5b8a8c5260078a52888c2080548210156123e8578a8a838f83908c8c8f61237c6123738761239d9b61187f565b97905493611971565b5196519889978896879363c16e50ef60e01b85528401526024830190611931565b039460031b1c165af180156123de57906123bc92916123c157506118c3565b612347565b6123d7908c8d3d106114f5576114e681836116fb565b50386114c4565b8a513d8f823e3d90fd5b505060019950600895508998945060607fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f918a949c989395808a52600588528a8a2060ff199d8e8254161790558a5191825287820152428a820152a1558352522091825416179055565b875162461bcd60e51b81528088018a9052601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b6124a591508a3d8c116114f5576114e681836116fb565b3861233f565b89513d8e823e3d90fd5b8287939650600194979295505181520193019101928f918e9486946122fc565b885162461bcd60e51b8152600481018b9052601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b885162461bcd60e51b8152600481018b9052601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fdfea2646970667358221220d8340bf95e46911375957685f646c2e3f17644ced0ce7fa2ca27d31f7f949fb064736f6c63430008140033";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _owner,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _owner,
      overrides || {}
    ) as Promise<
      Whitelist & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Whitelist__factory {
    return super.connect(runner) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new Interface(_abi) as WhitelistInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Whitelist {
    return new Contract(address, _abi, runner) as unknown as Whitelist;
  }
}
