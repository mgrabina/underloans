/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Hasher,
  HasherInterface,
} from "../../../contracts/helpers/Hasher";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "xL_in",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "xR_in",
        type: "uint256",
      },
    ],
    name: "MiMCSponge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610299806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f47d33b514610030575b600080fd5b61004361003e3660046101e3565b61005c565b6040805192835260208301919091520160405180910390f35b60008060dc7f0fbe43c36a80e36d7c7c584d4f8f3759fb51f0d66065d8a227b688d12488c5d47f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000186868186848283099050600085806100bd576100bd610205565b8283099050600086806100d2576100d2610205565b848309905086806100e5576100e5610205565b818608945060005b6100f860018b610231565b8110156101cf5761010a60028b610231565b8110801561011757508015155b156101455760408051602081018b90520160405160208183030381529060405280519060200120985061015b565b61015060028b610231565b810361015b57600098505b949594878061016c5761016c610205565b878a089450878061017f5761017f610205565b8586099350878061019257610192610205565b848509925087806101a5576101a5610205565b858409915087806101b8576101b8610205565b8287089550806101c78161024a565b9150506100ed565b50949c939b50929950505050505050505050565b600080604083850312156101f657600080fd5b50508035926020909101359150565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102445761024461021b565b92915050565b60006001820161025c5761025c61021b565b506001019056fea264697066735822122037bfb69ccad8d4819400ac3bc943c3df97544088c7391005fe5daea381ecca5464736f6c63430008140033";

type HasherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HasherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hasher__factory extends ContractFactory {
  constructor(...args: HasherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Hasher & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Hasher__factory {
    return super.connect(runner) as Hasher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HasherInterface {
    return new Interface(_abi) as HasherInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Hasher {
    return new Contract(address, _abi, runner) as unknown as Hasher;
  }
}
