/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Verifier,
  VerifierInterface,
} from "../../../contracts/helpers/Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint256[6]",
        name: "inputs",
        type: "uint256[6]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[6]",
        name: "input",
        type: "uint256[6]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576112c0908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c908163695ef6f91461003a575063f398789b1461003557600080fd5b61022a565b346100af5760e03660031901126100af576004356001600160401b03918282116100af57366023830112156100af5781600401359283116100af5736602484840101116100af573660e4116100af576100ab61009984602485016111fb565b60405190151581529081906020820190565b0390f35b80fd5b634e487b7160e01b600052604160045260246000fd5b60405190604082018281106001600160401b038211176100e757604052565b6100b2565b6040519060c082018281106001600160401b038211176100e757604052565b6040519060a082018281106001600160401b038211176100e757604052565b80602312156101675761013b6100c8565b90816044918211610167576004905b8282106101575750505090565b813581526020918201910161014a565b600080fd5b8060e312156101675761017d6100c8565b90816101049182116101675760c4905b82821061019a5750505090565b813581526020918201910161018d565b9080601f83011215610167576101be6100c8565b80926040810192831161016757905b8282106101da5750505090565b81358152602091820191016101cd565b806101231215610167576101fc6100ec565b90816101c491821161016757610104905b82821061021a5750505090565b813581526020918201910161020d565b34610167576101c0366003190112610167576102453661012a565b3660631215610167576102566100c8565b60c481368211610167576044905b82821061028c576100ab610099868661027c3661016c565b90610286366101ea565b926104ae565b602060409161029b36856101aa565b815201910190610264565b60405190602082018281106001600160401b038211176100e7576040526020368337565b6102d26100c8565b906102db6100c8565b604036823782526102ea6100c8565b60403682376020830152565b60405190606082018281106001600160401b038211176100e7576040528161031c6100c8565b600081526000602082015281526103316102ca565b602082015260406103406100c8565b9160008352600060208401520152565b634e487b7160e01b600052603260045260246000fd5b6001600160401b0381116100e75760051b60200190565b6040519060e082018281106001600160401b038211176100e7576040526006825260c0366020840137565b906103b282610366565b60405190601f1990601f01811682016001600160401b038111838210176100e7576040528382526103e38294610366565b0190602036910137565b634e487b7160e01b600052601160045260246000fd5b60001981146104125760010190565b6103ed565b9060068110156104285760051b0190565b610350565b8051156104285760200190565b8051600110156104285760400190565b8051600210156104285760600190565b8051600310156104285760800190565b8051600410156104285760a00190565b8051600510156104285760c00190565b8051600610156104285760e00190565b80518210156104285760209160051b010190565b929190926104ba6102f6565b9381516020809301516104cb6100c8565b9182528382015285526104dc6100c8565b9080515182526104ed815160200190565b518383015261050c836104fe6100c8565b920180515183525160200190565b51838201526105196100c8565b9182528282015281850152808251920151906105336100c8565b928352820152604083015261054661037d565b9060005b6006811061056c5750509061055e91610663565b61056757600190565b600090565b8061057a61058b9284610417565b51610585828661049a565b52610403565b61054a565b906001820180921161041257565b906002820180921161041257565b906003820180921161041257565b906004820180921161041257565b906005820180921161041257565b156105dd57565b60405162461bcd60e51b81526020600482015260126024820152711d995c9a599a595c8b5898590b5a5b9c1d5d60721b6044820152606490fd5b1561061e57565b60405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c64006044820152606490fd5b91909161066e610ca9565b916106798251610590565b9061068b6080850192835151146105d6565b6106936100c8565b6000815260006020820152946000955b84518710156107235761071761071d916106e87f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016106e18b8a61049a565b5110610617565b6107116106ff87516106f98c610590565b9061049a565b5161070a8b8a61049a565b5190610878565b9061080c565b96610403565b956106a3565b61077595929650610771945061073d61074492945161042d565b519061080c565b9161074f8151610783565b9260208201518351602085015191606060408088015196015196015196610969565b1590565b61077e57600090565b600190565b6000602061078f6100c8565b828152015280511580610800575b6107e95760208151917f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479182910151068103908111610412576107de6100c8565b918252602082015290565b506107f26100c8565b600081526000602082015290565b5060208101511561079d565b91906108166100c8565b6000815260006020820152809360405160808101918183106001600160401b038411176100e7576060946020809260c0956040526080368637805185520151828401528051604084015201518482015260066107cf195a01fa1561087657565bfe5b91906108826100c8565b6000815260006020820152809360405160608101938185106001600160401b038611176100e7576020608093606096604052863685378051845201516020830152604082015260076107cf195a01fa1561087657565b6108e061010b565b6004815290600082815b608081106108f757505050565b6020906109026100c8565b8481528285818301528285010152016108ea565b6040519061010082018281106001600160401b038211176100e75760405260078252600082815b60e0811061094a57505050565b6020906109556100c8565b84815282858183015282850101520161093d565b979693949291956109786108d8565b9561098161010b565b976004895260005b60808110610a3f5750610a3c999a6109a08961042d565b526109aa8861042d565b506109b48861043a565b526109be8761043a565b506109c88761044a565b526109d28661044a565b506109dc8661045a565b526109e68561045a565b506109f08661042d565b526109fa8561042d565b50610a048561043a565b52610a0e8461043a565b50610a188461044a565b52610a228361044a565b50610a2c8361045a565b52610a368261045a565b50610af5565b90565b602090610a4a6102ca565b82828d01015201610989565b15610a5d57565b60405162461bcd60e51b81526020600482015260166024820152751c185a5c9a5b99cb5b195b99dd1a1ccb59985a5b195960521b6044820152606490fd5b9060068202918083046006149015171561041257565b15610ab857565b60405162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b6044820152606490fd5b610b028151835114610a56565b8051610b0d81610a9b565b92610b17846103a8565b9260005b838110610b5957505050506020918291610b336102a6565b93849260051b910160086107cf195a01fa801561087657610b5390610ab1565b51151590565b80610b67610c43928461049a565b5151610b7b610b7583610a9b565b8861049a565b52610c2e602080610b8c848761049a565b510151610ba9610ba3610b9e86610a9b565b610590565b8a61049a565b52610bb4838761049a565b515151610bcb610ba3610bc686610a9b565b61059e565b52610be1610bd9848861049a565b515160200190565b51610bf6610ba3610bf186610a9b565b6105ac565b5280610c02848861049a565b51015151610c1a610ba3610c1586610a9b565b6105ba565b52610c25838761049a565b51015160200190565b51610585610b75610c3e84610a9b565b6105c8565b610b1b565b6040519060a082018281106001600160401b038211176100e7576040526060608083610c726100c8565b60008152600060208201528152610c876102ca565b6020820152610c946102ca565b6040820152610ca16102ca565b838201520152565b610cb1610c48565b906111f8610cbd6100c8565b7f264d891691a08dae22f57f018f1665a0aa34c6c895fd901b274dd870e5cd1aed81526020907f2501df302c7caed2df8684aaf69d86c8eab0e46c8cbe2038a90fcb3d34190bf8828201528452610d126100c8565b7f1b2dbdd02389e92971adc36e94485166f796f0021ff93d6e2e6c868660ebb39381527f1bbf174dff18af6fa241d082308f7aff3aafa2a5cf27d192ca6a1d56252f49a482820152610d626100c8565b7f2b40c8c76afce981c71ed2f7e8d4a8a2b543ae478064129d814173ae54a1319b81527f12d7dc904e67edb2f1428f9d22c5e13e2a4b7ab504ce9584e9e191e1ef2e795883820152610db26100c8565b9182528282015281850152610dc56100c8565b7f014569921d8484ff37f879994e1fb07be158d108f28cb12b15d24149a94ee89581527f2b5c16d3a37f5015e26cbbcfa977cafec0a6183e4ccdcd15e558f45c0d01aa8d82820152610e156100c8565b7f21c734802ad044b2e7e9198c252f0f32cb813bc7c0d6641f0916bb2c5590811281527f1c86b4441db8b0da39ec8283126232df2a6ca693c732585d0f299a867bb3bc2783820152610e656100c8565b918252828201526040850152610e796100c8565b7f18d5109b40bb2f4aeda955d10d3e8502ac728ca5daaf2d4e30fbdd4849520eba81527f288d27522c99a69a26afaab5114dbef2eadb8a5dc943adb25191bee63ee96b6e82820152610ec96100c8565b7f2d5507d69aa770003c8355b1bfd90ea4b4a4db190e2ea8b88bde857b663bbfcf81527e381aae8e13321206acc6f6bd078445d28f41e1c8aa70afa601dd5d0147085783820152610f186100c8565b918252828201526060850152610f2c610916565b60808501908152610f98610f3e6100c8565b7f0e78b720fd256ed4336eb6ad881d1408089cd268cdeb0051acaf5fb2d5897e6c81527f24a4a66516e583b37625e3b1ce843bc3282acfed6f8c2e0018edffcf277de4e484820152825190610f928261042d565b5261042d565b50610ffe610fa46100c8565b7f0b6c920b67b53f902d4e4c226f616c5c1093b9836ec627dd7fa2941af6c0ffc781527f15040b48b27899df6712d544d325b730cf3cc255938b9bf31f7b1ee4286f09a684820152825190610ff88261043a565b5261043a565b5061106461100a6100c8565b7f25880f6d76e59337ba770a6e45f66b82bbe7830f8511e4bdf78de77df965ef4781527f1c69df69f4f0546966af0996c9e685396f8f2600269b897f027d5ab982f824808482015282519061105e8261044a565b5261044a565b506110ca6110706100c8565b7f0586eee0decb38fd251d7dfa507621e16cb005bec58eb12685a1e16f01745e3f81527f1be834f528225cb5ff7f950aca781718740fc7e72c2a186a0025dacaba9357d2848201528251906110c48261045a565b5261045a565b506111306110d66100c8565b7f13ea3b930f76deb301a04bfa0b170a7f96b03b3b88d8324927bb6a2dbda2b74381527f17333fddca91305abd43c5b4f0e24ace1f61076abe81f612da90f6a4507d62898482015282519061112a8261046a565b5261046a565b5061119661113c6100c8565b7f0c12e4bf8cc2c8334fcf4f4ca7b01e81810c646ee3f097b0320f52bfb917d8fe81527f25309322d1d05389ab0b5a656ded3bf9d6956e2fb9ea34b2fef481b4af1e39f5848201528251906111908261047a565b5261047a565b507f0f7593bf907d41d0139bbef2c1f72ac91d1e39688b51b35c9eca682a3643ed996111c06100c8565b927f218af74e64ca1d87ab7d59ca4ef4fcc237eed5d582782cec7d839827bec532e6845283015251906111f28261048a565b5261048a565b50565b91908201610100838203126101675761121481846101aa565b9061123c61122582604087016101aa565b9160c061123582608089016101aa565b96016101aa565b906112456100c8565b908152602094858201526112576100ec565b9260e484368211610167576024905b82821061127b57505050610a3c9495506104ae565b8135815290880190880161126656fea264697066735822122000dbe0b0a3720195e5d82474b1648168cec0c01c1a4413e122a3a2fd6079306264736f6c63430008140033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Verifier__factory {
    return super.connect(runner) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new Interface(_abi) as VerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Verifier {
    return new Contract(address, _abi, runner) as unknown as Verifier;
  }
}
