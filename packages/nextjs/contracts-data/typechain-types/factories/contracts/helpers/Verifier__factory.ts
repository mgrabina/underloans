/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Verifier,
  VerifierInterface,
} from "../../../contracts/helpers/Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint256[6]",
        name: "input",
        type: "uint256[6]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610f1b908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63695ef6f91461002857600080fd5b346100d05760e03660031901126100d05760043567ffffffffffffffff8082116100cc57366023830112156100cc5781600401359081116100c757610076601f8201601f1916602001610149565b9181835236602483830101116100c357926020826100ad949360246100bf970183860137830101526100a73661016f565b90610459565b60405190151581529081906020820190565b0390f35b8380fd5b6100d3565b8280fd5b80fd5b634e487b7160e01b600052604160045260246000fd5b604051906040820182811067ffffffffffffffff8211176100c757604052565b604051906080820182811067ffffffffffffffff8211176100c757604052565b6040519060e0820182811067ffffffffffffffff8211176100c757604052565b6040519190601f01601f1916820167ffffffffffffffff8111838210176100c757604052565b80604312156101c1576040519060c0820182811067ffffffffffffffff8211176100c7576040528160e49182116101c1576024905b8282106101b15750505090565b81358152602091820191016101a4565b600080fd5b9061010080838303126101c15781601f840112156101c1576040519281840184811067ffffffffffffffff8211176100c757604052839181019283116101c157905b8282106102155750505090565b8151815260209182019101610208565b634e487b7160e01b600052601160045260246000fd5b60ff1660ff811461024c5760010190565b610225565b634e487b7160e01b600052603260045260246000fd5b9060088110156102785760051b0190565b610251565b1561028457565b60405162461bcd60e51b815260206004820152602260248201527f76657269666965722d70726f6f662d656c656d656e742d6774652d7072696d656044820152612d7160f01b6064820152608490fd5b6102dc6100e9565b906000825260006020830152565b604051906020820182811067ffffffffffffffff8211176100c7576040526020368337565b6103176100e9565b906103206100e9565b6040368237825261032f6100e9565b60403682376020830152565b604051906060820182811067ffffffffffffffff8211176100c757604052816103626100e9565b6000815260006020820152815261037761030f565b602082015260406103866100e9565b9160008352600060208401520152565b9060078110156102785760051b0190565b600019811461024c5760010190565b9060068110156102785760051b0190565b156103ce57565b60405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c64006044820152606490fd5b906001820180921161024c57565b906002820180921161024c57565b906003820180921161024c57565b906004820180921161024c57565b906005820180921161024c57565b61046d6020918280825183010191016101c6565b9260005b60ff811660088110156104c157906104b77f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476104b06104bc9489610267565b511061027d565b61023b565b610471565b505091906104cd61033b565b938051828201516104dc6100e9565b9182528382015285526104ed6100e9565b92604082015184526060820151838501526105066100e9565b6080830151815260a08301518482015261051e6100e9565b9485528385015282860193845260e060c083015192015161053d6100e9565b9283528383015260408601918252610553610a0b565b9261055c6100e9565b96600088526000828901526105786080860198895151906106ca565b926000905b600682106105b65750506105b3969750610597905161062f565b945190845190850151916060604087015195519601519661081f565b90565b9093610623610629916105f47f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016105ed89876103b6565b51106103c7565b61061d61060b8d516106058a610413565b90610396565b5161061689876103b6565b5190610722565b906106ca565b946103a7565b9061057d565b6000602061063b6100e9565b82815201528051908115806106ad575b1561066857505061065a6100e9565b600081526000602082015290565b602001517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790819006810390811161024c576106a26100e9565b918252602082015290565b5060208101511561064b565b9060048110156102785760051b0190565b60609092919260c06106da6100e9565b91600083526000602084015260208396816106f3610109565b936080368637805185520151828401528051604084015201518482015260066107cf195a01fa1561072057565bfe5b919061072c6100e9565b60008152600060208201528093604051606081019381851067ffffffffffffffff8611176100c7576020608093606096604052863685378051845201516020830152604082015260076107cf195a01fa1561072057565b60405190610320820182811067ffffffffffffffff8211176100c75760405260188252610300366020840137565b9060068202918083046006149015171561024c57565b80518210156102785760209160051b010190565b156107e257565b60405162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b6044820152606490fd5b949195969290939661082f610109565b9586526020978897888801526040870152606086015261084d610109565b9384528584015260408301526060820152610866610783565b9160005b600481106108a2575050506103006108806102ea565b9384920160086107cf195a01fa80156107205761089c906107db565b51151590565b61097491929394506108b3816107b1565b6108bd82856106b9565b51516108c982886107c7565b52866108d583866106b9565b5101516108ea6108e483610413565b886107c7565b526108f582866106b9565b5151516109046108e483610421565b5261091a61091283876106b9565b515160200190565b516109276108e48361042f565b528661093383876106b9565b510151516109436108e48361043d565b5261096e61096861096189610958868a6106b9565b51015160200190565b519261044b565b876107c7565b526103a7565b908493929161086a565b6040519060a0820182811067ffffffffffffffff8211176100c757604052816109a56100e9565b906000825260209160008382015281526109bd61030f565b828201526109c961030f565b60408201526109d661030f565b60608201526109e3610129565b9160005b60e081106109f757505060800152565b8190610a016102d4565b81860152016109e7565b610a1361097e565b90610a1c6100e9565b7f2dbfc3ec62a3eee5a3b4b464bcf1f8527bbca12adea0f1f12033cd4f61b0e09181526020907f19e55bd0b72c126da18665039556776642ff82e2f347f24fcea2475f4db087df828201528352610a716100e9565b7f1ae724ab134e5a7c6bd8a116fa5505b259522c0f164a5e8126e3ec7d34465f6e81527e9f1bcdc853f8e3531756bb625b0d1dc014f4ab57c3f79f4f4e2e7ef7e0ead682820152610ac06100e9565b7f23a8ca5760457e726365b92fd0ceb486665797cd68c35dcffd8e4ae8066691e981527f13ec7182c9fd68331a10f8be0fe885d730de5c7f89aa7d0b7bafaa009bbc9e3e83820152610b106100e9565b9182528282015281840152610b236100e9565b7f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed82820152610b736100e9565b7f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83820152610bc36100e9565b918252828201526040840152610bd76100e9565b7f2f0c63d0c53b3dfbca27b6b43ae7fbf55a38d78a21470996485b03128accc20881527e556502356e37ed150db2e36531b0f275fd6835c0fc1945922e270b48c48a8682820152610c266100e9565b7f02644c27b5dbd793592a70b735e22c798a5e309fa17a992a7dc2a050e01b298f81527f194776b6a53439d7336f389d2a8f6651e40885f5ca2538b0dc9cb534fb23f7fa83820152610c766100e9565b918252828201526060840152610ee2610c8d6100e9565b7f23df1bc9165e9c1c9b2bc036d8ebdd10e7aeae7e5e8019fde68aec7c818bb23e81527f0b6c92080d37c5fb2ddf30892a33665e5478432ef3f71ac8768ecbbe62c77892838201526080850190815152610ce56100e9565b7f1c7b2adf45e046caea000956b2ecb2d8617e710d2a7bb201a95ea276f92307b481527f2b15f07536f45948cf4abe6596637d902ffabb18c8c2f5c151544c294ce4a67284820152815160200152610d3b6100e9565b7f1cecfe92882a8c835a47bf01bfa655cf628cbba7f81cf4042179fd13edcd6a3981527f0154bfbb2cb786ca247d4b69183d1751f267bbc7656be8d0f0e7a5a47e2c110184820152815160400152610d916100e9565b7f1584616a7423efcc72f69ea84fa0b2bc01433677297f4e8351bebfc15bcd0cda81527f0623755b1488526daa9fecf0e11b110dd6df12c461579d792e1db65af523c8be84820152815160600152610de76100e9565b7f12fbb5bfca9d61357ba2d641604cf4852e21ef54faa180fe539c18994dc1da5a81527f2f09dd9972a1af5f7bcfccf3d7ab600c9d898ea6d6933150ba0ae228ece17e5f84820152815160800152610e3d6100e9565b7f0adb513796fdf2103022c64151ce05f7c7a6d9200e8d819fa59e654fc4bfe83c81527f2d64f72ef4eddf9ca032058ed2bf691758387e913a77cf99d6a3cfb37c8ba7ee84820152815160a001527f0bbe41e52237ac13eb7b01f3cb999b7394d08734e71b1c3ada62713e17eb560c610eb46100e9565b937f21e7c9bffda74bfd2c4393b6803d775545de6fa89145f4a23476241d9881b66185528401525160c00190565b5256fea26469706673582212208ec3dcc6d6776e4652493ddc4193b01e7e886f597590347ef4a4f5737a441f4b64736f6c63430008140033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Verifier__factory {
    return super.connect(runner) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new Interface(_abi) as VerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Verifier {
    return new Contract(address, _abi, runner) as unknown as Verifier;
  }
}
