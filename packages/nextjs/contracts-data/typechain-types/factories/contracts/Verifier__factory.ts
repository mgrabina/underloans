/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Verifier, VerifierInterface } from "../../contracts/Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "getEthHashedMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_ethHashMessage",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576104ce908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816319045a251461004a575080635ade6633146100455763ebb90f181461004057600080fd5b6101d2565b610142565b3461009a57604036600319011261009a576024359067ffffffffffffffff821161009a57602061008861008036600486016100f6565b6004356102be565b6040516001600160a01b039091168152f35b80fd5b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176100d557604052565b61009d565b67ffffffffffffffff81116100d557601f01601f191660200190565b81601f8201121561013d5780359061010d826100da565b9261011b60405194856100b3565b8284526020838301011161013d57816000926020809301838601378301015290565b600080fd5b3461013d57606036600319011261013d576001600160a01b036004358181169081900361013d5767ffffffffffffffff9160243583811161013d5761018b9036906004016100f6565b9260443590811161013d576101ce936101b46101ae6101b99336906004016100f6565b91610238565b6102be565b60405191169190911481529081906020820190565b0390f35b3461013d57602036600319011261013d5760043567ffffffffffffffff811161013d5761020d61020860209236906004016100f6565b610238565b604051908152f35b60005b8381106102285750506000910152565b8181015183820152602001610218565b61024281516103dd565b906102ac603a604051809360208201957f19457468657265756d205369676e6564204d6573736167653a0a00000000000087526102888151809260208787019101610215565b820161029d8251809360208785019101610215565b0103601a8101845201826100b3565b51902090565b6040513d6000823e3d90fd5b90604181510361030e576020818101516040808401516060948501518251968752600090811a8786015291860192909252928401528180529160809060015afa156103095760005190565b6102b2565b60405162461bcd60e51b815260206004820152601660248201527514da59db985d1d5c99481a5cc81b9bdd081d985b1a5960521b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9061036c826100da565b61037960405191826100b3565b828152809261038a601f19916100da565b0190602036910137565b6000198101919082116103a357565b61034c565b60300190816030116103a357565b9081518110156103c7570160200190565b634e487b7160e01b600052603260045260246000fd5b8015610469576000818181805b61044d57506103f881610362565b935b6104045750505090565b61040d90610394565b90600a906104386104286104228484066103a8565b60ff1690565b60f81b6001600160f81b03191690565b841a61044484876103b6565b530490816103fa565b915060001981146103a3576001600a91019104808492916103ea565b506040516040810181811067ffffffffffffffff8211176100d55760405260018152600360fc1b60208201529056fea2646970667358221220535defc30595d44f717c9c7c67443d314a8bd7849206476837b7cf88c5205fdf64736f6c63430008140033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Verifier__factory {
    return super.connect(runner) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new Interface(_abi) as VerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Verifier {
    return new Contract(address, _abi, runner) as unknown as Verifier;
  }
}
