/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  KintoCountryValidatorModule,
  KintoCountryValidatorModuleInterface,
} from "../../../../contracts/modules/KintoCountryValidatorModule.sol/KintoCountryValidatorModule";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "KYCViewerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "country",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arg",
        type: "bytes",
      },
    ],
    name: "validate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008054742033f28c3a636b38683a38987100723f2e2d3d038e6001600160b01b0319909116179055610269806100496000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806362c2e53f14610046578063c16e50ef14610076578063d8b0b49914610099575b600080fd5b600054610059906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610089610084366004610196565b6100c1565b604051901515815260200161006d565b6000546100ae90600160a01b900461ffff1681565b60405161ffff909116815260200161006d565b6000805460405163d821f92d60e01b8152336004820152600160a01b820461ffff16916001600160a01b03169063d821f92d90602401602060405180830381865afa158015610114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101389190610208565b61ffff161461018d5760405162461bcd60e51b815260206004820152601a60248201527f55736572206973206e6f742066726f6d20417267656e74696e61000000000000604482015260640160405180910390fd5b50600192915050565b600080602083850312156101a957600080fd5b823567ffffffffffffffff808211156101c157600080fd5b818501915085601f8301126101d557600080fd5b8135818111156101e457600080fd5b8660208285010111156101f657600080fd5b60209290920196919550909350505050565b60006020828403121561021a57600080fd5b815161ffff8116811461022c57600080fd5b939250505056fea2646970667358221220a38b6b1e8a9b91892d3143a89da268c99be72e7ee9d8941e3fc09d9ffb27b2ec64736f6c63430008140033";

type KintoCountryValidatorModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KintoCountryValidatorModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KintoCountryValidatorModule__factory extends ContractFactory {
  constructor(...args: KintoCountryValidatorModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KintoCountryValidatorModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): KintoCountryValidatorModule__factory {
    return super.connect(runner) as KintoCountryValidatorModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KintoCountryValidatorModuleInterface {
    return new Interface(_abi) as KintoCountryValidatorModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KintoCountryValidatorModule {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as KintoCountryValidatorModule;
  }
}
