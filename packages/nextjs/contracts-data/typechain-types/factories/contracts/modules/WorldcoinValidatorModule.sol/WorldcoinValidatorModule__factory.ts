/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  WorldcoinValidatorModule,
  WorldcoinValidatorModuleInterface,
} from "../../../../contracts/modules/WorldcoinValidatorModule.sol/WorldcoinValidatorModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arg",
        type: "bytes",
      },
    ],
    name: "validate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "worldcoinVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461014d57601f61073538819003918201601f19168301916001600160401b038311848410176101525780849260209460405283398101031261014d57516001600160a01b0381169081900361014d57600080546001600160a01b03191690911781556001805490919061007490610168565b601f811161011e575b50605982558181526b30643266396263376231316360a01b82602083207f6170705f73746167696e675f3637313637356138656464353133306633613762815501556100ca600254610168565b90601f82116100f4575b600e6631b7b6b6b4ba1960c91b0160025560405161059290816101a38239f35b60028152601f60208220920160051c8201915b82811061011457506100d4565b8181558301610107565b828252826002601f60208520930160051c830192015b82811061014257505061007d565b838155018390610134565b600080fd5b634e487b7160e01b600052604160045260246000fd5b90600182811c92168015610198575b602083101461018257565b634e487b7160e01b600052602260045260246000fd5b91607f169161017756fe608080604052600436101561001357600080fd5b60003560e01c908163c16e50ef14610063575063d988e1451461003557600080fd5b3461005e57600036600319011261005e576000546040516001600160a01b039091168152602090f35b600080fd5b3461005e57602036600319011261005e5760043567ffffffffffffffff811161005e573660238201121561005e57806004013567ffffffffffffffff811161005e57810190602482019136831161005e578161016091031261005e576080830183811067ffffffffffffffff8211176103a35760405260248101356001600160a01b038116810361005e5783526020830190604481013582526040840192606482013584528060a38301121561005e5760405191610100830183811067ffffffffffffffff8211176103a3576040528290610184810192831161005e57608401905b8282106104d857505050606084015251918051604051906bffffffffffffffffffffffff199060601b16602082015260148152604081019080821067ffffffffffffffff8311176103a35761019c9160405261050a565b91519060405160006001548060011c906001811680156104ce575b602083108114610432579081156104aa5750600114610452575b50906101e9816101ee9303601f1981018352826104e8565b61050a565b60405190602082015260006002548060011c90600181168015610448575b6020831081146104325790811561041057506001146103b9575b50816101e96060936102409303601f1981018352826104e8565b9101519160405160c0810181811067ffffffffffffffff8211176103a3579360a087949282949660405285815260016020820152876040820152866060820152836080820152015260018060a01b036000541693604051958694633bc778e360e01b865260048601526001602486015260448501526064840152608483015260a482016000905b60088210610389575050506101a48160006020945af190811561037d57600091610342575b50156102fd57602060405160018152f35b60405162461bcd60e51b815260206004820152601d60248201527f576f726c64636f696e20566572696669636174696f6e204661696c65640000006044820152606490fd5b90506020813d602011610375575b8161035d602093836104e8565b8101031261005e5751801515810361005e57816102ec565b3d9150610350565b6040513d6000823e3d90fd5b8293506020809160019394518152019301910184926102c7565b634e487b7160e01b600052604160045260246000fd5b905060026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6000905b8282106103f9575050810160400181610226565b6001816020925460408588010152019101906103e5565b60ff191660408086019190915282151590920284019091019150829050610226565b634e487b7160e01b600052602260045260246000fd5b91607f169161020c565b905060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66000905b82821061049457505081016020016101e96101d1565b600181602092548385880101520191019061047e565b60ff1916602080860191909152821515909202840190910191506101e990506101d1565b91607f16916101b7565b8135815260209182019101610145565b90601f8019910116810190811067ffffffffffffffff8211176103a357604052565b604051908181519160005b8381106105455750508061053892602092016000838201520380845201826104e8565b6020815191012060081c90565b60208282018101518683018201528593500161051556fea2646970667358221220e945fd736247e4b9603673ef2e9a0db9dcf0bccf1118c0fd1ef59b14f8e3f70164736f6c63430008140033";

type WorldcoinValidatorModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldcoinValidatorModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldcoinValidatorModule__factory extends ContractFactory {
  constructor(...args: WorldcoinValidatorModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override deploy(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_verifier, overrides || {}) as Promise<
      WorldcoinValidatorModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): WorldcoinValidatorModule__factory {
    return super.connect(runner) as WorldcoinValidatorModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldcoinValidatorModuleInterface {
    return new Interface(_abi) as WorldcoinValidatorModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WorldcoinValidatorModule {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as WorldcoinValidatorModule;
  }
}
