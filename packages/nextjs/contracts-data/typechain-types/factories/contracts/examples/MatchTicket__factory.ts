/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MatchTicket,
  MatchTicketInterface,
} from "../../../contracts/examples/MatchTicket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200018d576001600160401b0390601f620019e338819003918201601f19168301918483118484101762000177578084926020946040528339810103126200018d57516001600160a01b0391828216918290036200018d57604051906020820190811182821017620001775760405260008091526002546001908181811c911680156200016c575b60208210146200015857601f81116200010e575b5050806002558115620000f657600380546001600160a01b0319811684179091556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36118509081620001938239f35b60249060405190631e4fbdf760e01b82526004820152fd5b60028352601f0160051c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101905b8181106200014d57506200009e565b83815582016200013e565b634e487b7160e01b83526022600452602483fd5b90607f16906200008a565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461011657806301ffc9a71461011157806302fe53051461010c5780630e89341c146101075780631f7fdffa146101025780632eb2c2d6146100fd5780634e1273f4146100f85780636b20c454146100f3578063715018a6146100ee578063731133e9146100e95780638da5cb5b146100e4578063a22cb465146100df578063e985e9c5146100da578063f242432a146100d5578063f2fde38b146100d05763f5298aca146100cb57600080fd5b610d24565b610c96565b610ba9565b610b4c565b610a8f565b610a66565b6109de565b61097d565b610891565b6107d7565b61066b565b6105c3565b610459565b6102d9565b6101bf565b610160565b600435906001600160a01b038216820361013157565b600080fd5b602435906001600160a01b038216820361013157565b35906001600160a01b038216820361013157565b346101315760403660031901126101315760206101a461017e61011b565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b031981160361013157565b346101315760203660031901126101315760206004356101de816101ad565b63ffffffff60e01b16636cdb3d1360e11b811490811561021c575b811561020b575b506040519015158152f35b6301ffc9a760e01b14905038610200565b6303a24d0760e21b811491506101f9565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761025f57604052565b61022d565b90601f8019910116810190811067ffffffffffffffff82111761025f57604052565b67ffffffffffffffff811161025f57601f01601f191660200190565b9291926102ae82610286565b916102bc6040519384610264565b829481845281830111610131578281602093846000960137010152565b34610131576020806003193601126101315767ffffffffffffffff60043581811161013157366023820112156101315761031d9036906024816004013591016102a2565b91610326610de6565b825191821161025f576103438261033e600254610e12565b6117a9565b80601f831160011461037e57508192600092610373575b5050600019600383901b1c191660019190911b17600255005b01519050388061035a565b90601f198316936103b160026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90565b926000905b8682106103ed57505083600195106103d4575b505050811b01600255005b015160001960f88460031b161c191690553880806103c9565b806001859682949686015181550195019301906103b6565b919082519283825260005b848110610431575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610410565b906020610456928181520190610405565b90565b34610131576020806003193601126101315760405160009160025461047d81610e12565b8084529060019081811690811561051257506001146104b7575b6104b3846104a781880382610264565b60405191829182610445565b0390f35b600260009081529294507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8284106104ff57505050816104b3936104a79282010193610497565b80548585018701529285019281016104e3565b60ff1916858501525050151560051b82010191506104a7816104b3610497565b67ffffffffffffffff811161025f5760051b60200190565b81601f820112156101315780359161056183610532565b9261056f6040519485610264565b808452602092838086019260051b820101928311610131578301905b828210610599575050505090565b8135815290830190830161058b565b9080601f8301121561013157816020610456933591016102a2565b34610131576080366003190112610131576105dc61011b565b67ffffffffffffffff602435818111610131576105fd90369060040161054a565b906044358181116101315761061690369060040161054a565b906064359081116101315761062f9036906004016105a8565b91610638610de6565b6001600160a01b0384161561065257610650936110ea565b005b604051632bfa23e760e11b815260006004820152602490fd5b346101315760a03660031901126101315761068461011b565b61068c610136565b906044359167ffffffffffffffff90818411610131576106b16004943690860161054a565b90606435838111610131576106c9903690870161054a565b92608435908111610131576106e190369087016105a8565b936001600160a01b0380821690338214158061076e575b610741578316156107295715610712576106509550611253565b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b50600082815260016020908152604080832033845290915290205460ff16156106f8565b90815180825260208080930193019160005b8281106107b2575050505090565b8351855293810193928101926001016107a4565b906020610456928181520190610792565b346101315760403660031901126101315760043567ffffffffffffffff808211610131573660238301121561013157816004013561081481610532565b926108226040519485610264565b81845260209160248386019160051b8301019136831161013157602401905b82821061087a5785602435868111610131576104b39161086861086e92369060040161054a565b90610ea0565b604051918291826107c6565b8380916108868461014c565b815201910190610841565b34610131576060366003190112610131576108aa61011b565b67ffffffffffffffff602435818111610131576108cb90369060040161054a565b90604435908111610131576108e490369060040161054a565b906001600160a01b0383163381141580610959575b610932571561091a5761065092600060405161091481610243565b52610f65565b604051626a0d4560e21b815260006004820152602490fd5b60405163711bec9160e11b81523360048201526001600160a01b0385166024820152604490fd5b50600081815260016020908152604080832033845290915290205460ff16156108f9565b34610131576000806003193601126109db57610997610de6565b600380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b34610131576080366003190112610131576109f761011b565b60643567ffffffffffffffff811161013157610a179036906004016105a8565b610a1f610de6565b6001600160a01b038216156106525761065091610a606044356024359160405192600184526020840152604083019160018352606084015260808301604052565b916110ea565b34610131576000366003190112610131576003546040516001600160a01b039091168152602090f35b3461013157604036600319011261013157610aa861011b565b602435801515808203610131576001600160a01b038316928315610b34573360009081526001602090815260408083206001600160a01b039094168352929052209060ff801983541691161790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160405180610b2f339482919091602081019215159052565b0390a3005b60405162ced3e160e81b815260006004820152602490fd5b3461013157604036600319011261013157602060ff610b9d610b6c61011b565b610b74610136565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b54166040519015158152f35b346101315760a036600319011261013157610bc261011b565b610bca610136565b60843567ffffffffffffffff811161013157610bea9036906004016105a8565b906001600160a01b03838116903382141580610c72575b610c4b57821615610652571561091a5761065092610c436064356044359160405192600184526020840152604083019160018352606084015260808301604052565b929091611253565b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b50600082815260016020908152604080832033845290915290205460ff1615610c01565b3461013157602036600319011261013157610caf61011b565b610cb7610de6565b6001600160a01b03908116908115610d0b57600354826bffffffffffffffffffffffff60a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461013157606036600319011261013157610d3d61011b565b6001600160a01b0381163381141580610dc2575b610d9b571561091a5761065090610d8c6044356024359160405192600184526020840152604083019160018352606084015260808301604052565b91600060405161091481610243565b60405163711bec9160e11b81523360048201526001600160a01b0383166024820152604490fd5b50600081815260016020908152604080832033845290915290205460ff1615610d51565b6003546001600160a01b03163303610dfa57565b60405163118cdaa760e01b8152336004820152602490fd5b90600182811c92168015610e42575b6020831014610e2c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610e21565b634e487b7160e01b600052601160045260246000fd5b6000198114610e715760010190565b610e4c565b8051821015610e8a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91909180518351808203610f43575050805190610ebc82610532565b91610eca6040519384610264565b808352610ed9601f1991610532565b0190602091368385013760005b8151811015610f3b57600581901b8281018401519087018401516000908152602081815260408083206001600160a01b0390941683529290522054610f369190610f308287610e76565b52610e62565b610ee6565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b9291908051825190818103610f4357505060005b815181101561104a57600581901b82810160209081015191850101516001600160a01b038716610fb4575b5050610faf90610e62565b610f79565b610fe387610fcc846000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b548181106110135787610fcc610faf95949361100b9303936000526000602052604060002090565b559038610fa4565b6040516303dee4c560e01b81526001600160a01b038916600482015260248101919091526044810182905260648101839052608490fd5b50906000929391600181511484146110ab576020908101519181015160408051938452918301526001600160a01b039092169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291819081015b0390a4565b6040516001600160a01b039093169233927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9282916110a6918361145e565b908051835190818103610f4357505060005b815181101561116857600581901b8281016020908101519186010151611136929185906001600160a01b03821661113b575b505050610e62565b6110fc565b61115e91610fcc611156926000526000602052604060002090565b918254611451565b905538848161112e565b5080519193929160010361120a576020818101518382015160408051928352928201526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b0384166111d4575b50505050565b80516001036111fb57906020806111f295930151910151913361152c565b388080806111ce565b611205933361173d565b6111f2565b6040516001600160a01b0385169060009033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb908061124b88888361145e565b0390a46111bf565b949190918151845190818103610f4357505060005b825181101561135b57600581901b83810160209081015191870101516001600160a01b03929186908a85166112d4575b6112aa9482166112af57505050610e62565b611268565b6112ca91610fcc611156926000526000602052604060002090565b905538858161112e565b91929390506112f18a610fcc846000526000602052604060002090565b5483811061132457918791846112aa9695940361131c8d610fcc856000526000602052604060002090565b559450611298565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b509491939290936001855114600014611406576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b0381166113cf575b5050505050565b84516001036113f5576020806113eb9601519201519233611626565b38808080806113c8565b61140194919233611772565b6113eb565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611449888c8361145e565b0390a46113b9565b91908201809211610e7157565b909161147561045693604084526040840190610792565b916020818403910152610792565b908160209103126101315751610456816101ad565b909260a0926104569594600180861b0316835260006020840152604083015260608201528160808201520190610405565b919261045695949160a094600180871b038092168552166020840152604083015260608201528160808201520190610405565b3d15611527573d9061150d82610286565b9161151b6040519384610264565b82523d6000602084013e565b606090565b9293919093843b61153e575050505050565b602091611561604051948593849363f23a6e6160e01b9889865260048601611498565b038160006001600160a01b0388165af1600091816115f6575b506115b957826115886114fc565b80519190826115b257604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b9050602001fd5b6001600160e01b031916036115d3575038808080806113c8565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b61161891925060203d811161161f575b6116108183610264565b810190611483565b903861157a565b503d611606565b939290949194853b61163b575b505050505050565b61165e602093604051958694859463f23a6e6160e01b998a8752600487016114c9565b038160006001600160a01b0388165af1600091816116a0575b5061168557826115886114fc565b6001600160e01b031916036115d35750388080808080611633565b6116b991925060203d811161161f576116108183610264565b9038611677565b926116ef61045695936116fd9360018060a01b031686526000602087015260a0604087015260a0860190610792565b908482036060860152610792565b916080818403910152610405565b939061045695936116ef916116fd9460018060a01b03809216885216602087015260a0604087015260a0860190610792565b9293919093843b61174f575050505050565b602091611561604051948593849363bc197c8160e01b98898652600486016116c0565b939290949194853b61178657505050505050565b61165e602093604051958694859463bc197c8160e01b998a87526004870161170b565b601f81116117b5575050565b600090600282527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace906020601f850160051c83019410611810575b601f0160051c01915b82811061180557505050565b8181556001016117f9565b90925082906117f056fea26469706673582212206dd0b19f2ebc80b16a8e667ce67d63eac2fecb7fd8b137be0f045810199de38164736f6c63430008140033";

type MatchTicketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MatchTicketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MatchTicket__factory extends ContractFactory {
  constructor(...args: MatchTicketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MatchTicket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MatchTicket__factory {
    return super.connect(runner) as MatchTicket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatchTicketInterface {
    return new Interface(_abi) as MatchTicketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MatchTicket {
    return new Contract(address, _abi, runner) as unknown as MatchTicket;
  }
}
