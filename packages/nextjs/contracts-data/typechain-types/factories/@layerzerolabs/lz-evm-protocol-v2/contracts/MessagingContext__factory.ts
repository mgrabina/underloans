/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  MessagingContext,
  MessagingContextInterface,
} from "../../../../@layerzerolabs/lz-evm-protocol-v2/contracts/MessagingContext";

const _abi = [
  {
    inputs: [],
    name: "getSendContext",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSendingMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class MessagingContext__factory {
  static readonly abi = _abi;
  static createInterface(): MessagingContextInterface {
    return new Interface(_abi) as MessagingContextInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MessagingContext {
    return new Contract(address, _abi, runner) as unknown as MessagingContext;
  }
}
